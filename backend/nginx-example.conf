## Server path ==>>>>>>>>> /etc/nginx/sites-available/default

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	root /var/www/html;
	index index.html index.htm index.nginx-debian.html;
  server_name _;
        
  # Block direct IP access to Nginx web server
  if ( $host != "api.arablocalmarket.com" ){
    return 444; #CONNECTION CLOSED WITHOUT RESPONSE
  }
  return 444; #CONNECTION CLOSED WITHOUT RESPONSE
}

server {

	root /var/www/html;
	index index.html index.htm index.nginx-debian.html;
  server_name api.arablocalmarket.com; # managed by Certbot

	location / {
    proxy_pass http://localhost:1337;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
	}

  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/api.arablocalmarket.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/api.arablocalmarket.com/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {

  # managed by Certbot
  if ($host = api.arablocalmarket.com) {
    return 301 https://$host$request_uri;
  }

	listen 80 ;
	listen [::]:80 ;
  server_name api.arablocalmarket.com;
  return 404; # managed by Certbot
}



## Server path ==>>>>>>>>> /etc/nginx/nginx.conf

http {
...

# This prevent from sending the server version with the request
server_tokens off;

# To fix "Request Entity Too Large" error, the default value is "1M"
client_max_body_size 5M;

# To prevent caching the whole request and response i memory before passing it to the proxied server.
proxy_request_buffering     off;
proxy_buffering             off;

# The value clean will cause the temporary files left after request processing to be removed
client_body_in_file_only clean;

# To prevent from saving logs
access_log    off;
error_log    off;
access_log  /dev/null;
error_log /dev/null;
}


# - VM Setup Commands:
sudo apt update -y
sudo apt install nginx -y
sudo ufw app list
sudo ufw allow 'Nginx HTTP'
sudo ufw allow 'Nginx HTTPs'
sudo ufw status
curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash
sudo apt install nodejs -y
sudo npm install -g npm@latest
sudo npm install -g pm2@latest
Setup Github runner
Set the environment variables
# - Enable and setup the firewall via the admin panel and make it accept the following:
# inbound TCP, SSH, HTTP, HTTPS
# outbound ICMP, ALL TCP, ALL UDP
# - Alter the following config files if needed:
# sudo vim /etc/nginx/sites-available/default
# sudo vim /etc/nginx/nginx.conf
sudo add-apt-repository ppa:certbot/certbot
sudo apt install python3-certbot-nginx
sudo certbot --nginx -d api.arablocalmarket.com
sudo certbot renew --dry-run
export NODE_ENV=production # Add this to .bashrc, .bashrc_profile or .profile file
# File path: /etc/nginx/sites-available/default

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

## Default server configuration ##
server {
	listen 80 default_server; # Remove "default_server" on production
	listen [::]:80 default_server; # Remove "default_server" on production
  server_name api.arablocalmarket.com;
  
  # Reroute the connection to HTTPS server # Note: Uncomment this only if SSL is enabled.
  if ($host = "api.arablocalmarket.com") {
      return 301 https://$host$request_uri;
  }

  # Note: Uncomment this only if SSL is enabled. This is useful when testing the server via IP address
  # Block direct IP access to Nginx web server (once it's connected to the domain)
  return 444; #CONNECTION CLOSED WITHOUT RESPONSE

  # # Note: Enable this only for testing
  # location / {
  #   proxy_pass http://localhost:1337;
  #   proxy_http_version 1.1;
  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection 'upgrade';
  #   proxy_set_header Host $host;
  #   proxy_cache_bypass $http_upgrade;
	# }

  # Virtual Host configuration
  # You can move that to a different file under sites-available/ and symlink that to sites-enabled/ to enable it.

	# include snippets/snakeoil.conf;

  #	location / {
  #		try_files $uri $uri/ =404;
  #	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Note: to enable SSL unccomment the following lines.
server {
	# SSL configuration Guide
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
  # 
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	# include snippets/snakeoil.conf;

  listen 443 ssl;
  listen [::]:443 ssl;
  # listen [::]:443 ssl ipv6only=on; # managed by Certbot
  server_name api.arablocalmarket.com;

  # # The followng configuration for cloudflare certificate
  ssl_certificate /etc/ssl/cloudflare/cloudflare.crt;
  ssl_certificate_key /etc/ssl/cloudflare/cloudflare.key;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  # # The followng managed by Certbot
  # ssl_certificate /etc/letsencrypt/live/api.arablocalmarket.com/fullchain.pem;
  # ssl_certificate_key /etc/letsencrypt/live/api.arablocalmarket.com/privkey.pem;
  # include /etc/letsencrypt/options-ssl-nginx.conf;
  # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  root /var/www/html;
	index index.html index.htm index.nginx-debian.html; # Add index.php if PHP is used

	location / {
    # # Allow connections only from Cloudflare 
    # allow 103.21.244.0/22
    # allow 103.22.200.0/22
    # allow 103.31.4.0/22
    # allow 104.16.0.0/13
    # allow 104.24.0.0/14
    # allow 108.162.192.0/18
    # allow 131.0.72.0/22
    # allow 141.101.64.0/18
    # allow 162.158.0.0/15
    # allow 172.64.0.0/13
    # allow 173.245.48.0/20
    # allow 188.114.96.0/20
    # allow 190.93.240.0/20
    # allow 197.234.240.0/22
    # allow 198.41.128.0/17
    # deny all; # Prevent connections or source that are not from Cloudflare

    proxy_pass http://localhost:1337;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}

}
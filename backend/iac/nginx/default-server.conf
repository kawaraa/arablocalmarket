# File path: /etc/nginx/sites-available/default

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	root /var/www/html;
	index index.html index.htm index.nginx-debian.html;
  server_name _;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

  # Note: to enable SSL unccomment the following lines.
  # Reroute the connection to HTTPS server
  # if ($host = api.arablocalmarket.com) {
  #     return 301 https://$host$request_uri;
  # }

  # Block direct IP access to Nginx web server (once it's connected to the domain)
  # if ( $host != "api.arablocalmarket.com" ){
  #     return 444; #CONNECTION CLOSED WITHOUT RESPONSE
  # }

  # Note: to enable SSL unccomment the following lines.
  # return 444; #CONNECTION CLOSED WITHOUT RESPONSE

  	location / {
    # # Allow connections only from Cloudflare 
    # allow 103.21.244.0/22
    # allow 103.22.200.0/22
    # allow 103.31.4.0/22
    # allow 104.16.0.0/13
    # allow 104.24.0.0/14
    # allow 108.162.192.0/18
    # allow 131.0.72.0/22
    # allow 141.101.64.0/18
    # allow 162.158.0.0/15
    # allow 172.64.0.0/13
    # allow 173.245.48.0/20
    # allow 188.114.96.0/20
    # allow 190.93.240.0/20
    # allow 197.234.240.0/22
    # allow 198.41.128.0/17
    # deny all; # Prevent connections or source that are not from Cloudflare

    proxy_pass http://localhost:1337;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}



# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

# Note: to enable SSL unccomment the following lines.
# server {

# 	# SSL configuration
# 	#
# 	# listen 443 ssl default_server;
# 	# listen [::]:443 ssl default_server;
# 	#
# 	# Note: You should disable gzip for SSL traffic.
# 	# See: https://bugs.debian.org/773332
# 	#
# 	# Read up on ssl_ciphers to ensure a secure configuration.
# 	# See: https://bugs.debian.org/765782
# 	#
# 	# Self signed certs generated by the ssl-cert package
# 	# Don't use them in a production server!
# 	#
# 	# include snippets/snakeoil.conf;

# 	root /var/www/html;
# 	index index.html index.htm index.nginx-debian.html; # Add index.php if PHP is used
#   server_name api.arablocalmarket.com; # managed by Certbot

#   listen [::]:443 ssl ipv6only=on; # managed by Certbot
#   listen 443 ssl; # managed by Certbot
#   ssl_certificate /etc/letsencrypt/live/api.arablocalmarket.com/fullchain.pem; # managed by Certbot
#   ssl_certificate_key /etc/letsencrypt/live/api.arablocalmarket.com/privkey.pem; # managed by Certbot
#   include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


# 	location / {
#     # # Allow connections only from Cloudflare 
#     # allow 103.21.244.0/22
#     # allow 103.22.200.0/22
#     # allow 103.31.4.0/22
#     # allow 104.16.0.0/13
#     # allow 104.24.0.0/14
#     # allow 108.162.192.0/18
#     # allow 131.0.72.0/22
#     # allow 141.101.64.0/18
#     # allow 162.158.0.0/15
#     # allow 172.64.0.0/13
#     # allow 173.245.48.0/20
#     # allow 188.114.96.0/20
#     # allow 190.93.240.0/20
#     # allow 197.234.240.0/22
#     # allow 198.41.128.0/17
#     # deny all; # Prevent connections or source that are not from Cloudflare

#     proxy_pass http://localhost:1337;
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection 'upgrade';
#     proxy_set_header Host $host;
#     proxy_cache_bypass $http_upgrade;
# 	}

# 	# pass PHP scripts to FastCGI server
# 	#
# 	#location ~ \.php$ {
# 	#	include snippets/fastcgi-php.conf;
# 	#
# 	#	# With php-fpm (or other unix sockets):
# 	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
# 	#	# With php-cgi (or other tcp sockets):
# 	#	fastcgi_pass 127.0.0.1:9000;
# 	#}

# 	# deny access to .htaccess files, if Apache's document root
# 	# concurs with nginx's one
# 	#
# 	#location ~ /\.ht {
# 	#	deny all;
# 	#}

# }